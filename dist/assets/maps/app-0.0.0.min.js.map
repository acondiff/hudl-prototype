{"version":3,"sources":["app.js","common/services/store.js","modules/team/RosterCtrl.js"],"names":["app","angular","module","moduleLoader","config","$stateProvider","$urlRouterProvider","$locationProvider","$futureStateProvider","state","url","templateUrl","controller","otherwise","run","$rootScope","$state","$stateParams","$scope","contentLoaded","currentAppString","startLocation","$on","event","toState","toParams","fromState","fromParams","name","go","split","updateCurrentTeam","i","currentTeam","teams","ls","factory","$parse","storage","window","localStorage","undefined","supported","JSON","privateMethods","parseValue","res","val","parse","parseFloat","isObject","e","publicMethods","set","key","value","$","cookie","console","log","saver","stringify","setItem","get","item","getItem","remove","removeItem","bind","def","assign","$watch","$http","$store","positions","abbr","on","gradClasses","gradYears","seasons","year","feet","label","inches","avatarUrls","streets","streetPrefixes","noteList","firstNames","lastNames","usedValues","roster","randNum","min","max","Math","round","random","randUniqueNum","id","length","u","push","index","splice","randArray","input","output","n","generatePlayers","teamSize","num","gradYr","first","last","pos","seasns","weight","email","toLowerCase","mphone","hphone","line1","line2","city","zip","avatarUrl","notes","activity","j","date","time","height","address","calculateClass","currentYear","Date","getFullYear","currentMonth","getMonth","schoolYearOffset","cls","rosterOrder","predicate","reverse","positionChange","addingNewPlayer","removeNewPlayer","showAllPositions","positionsFilter","a","p","indexOf","gradClassChange","showAllGradClasses","gradClassesFilter","g","seasonsChange","showAllSeasons","seasonsFilter","s","editPlayer","editingPlayer","cancelEditPlayer","selectPlayer","activePlayer","saveEditPlayer","saveId","positionString","addNewPlayer","rosterId","clearFilters","selectPlayerByIndex","filteredRosterPlayerIndex","deletePlayer","playerIndexBeforeDeleted","parseInt","$apply","filteredRoster","rosterPlayerIndex","player","toJson","focus","selectPrevPlayer","selectNextPlayer","scrollToSelection","scrollWrap","itemHeight","adjWindowScroll","scrollTop","adjSelectedScroll","keyPress","tab","enter","esc","space","left","up","right","down","shift","ctrl","alt","backspace","del","command","keyCode","preventDefault","refreshData","printRoster","print","clearRosterSearch","rosterSearch","is","rosterSearchMouseDown","init","isArray","listener","refreshed"],"mappings":"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","file":"app-0.0.0.min.js","sourcesContent":["var app = angular.module('app', [\n      'ui.router', \n      'ui.bootstrap', \n      'ui.bootstrap.tpls', \n      'ui.select',\n      'ngAnimate', \n      'templates',\n      'localStorage'  \n]);\n\nvar moduleLoader = 'partials/module-load.html';\n\napp.config(['$stateProvider', '$urlRouterProvider', '$locationProvider', \n\tfunction AppConfig($stateProvider, $urlRouterProvider, $locationProvider, $futureStateProvider) {\n\t$stateProvider\n\t\t.state('team', \n\t\t\t{ url: '/team',\n\t\t\ttemplateUrl: moduleLoader })\n\t\t\t.state('team.roster', \n\t\t\t\t{ url: '/roster',\n\t\t\t\tcontroller: 'RosterCtrl',\n\t\t\t\ttemplateUrl: 'team/roster.html' });\n\t$urlRouterProvider.otherwise('/team/roster');\n}]);\n\napp.run(['$rootScope', '$state', '$stateParams', function ($rootScope, $state, $stateParams) {\n  $rootScope.$state = $state;\n  $rootScope.$stateParams = $stateParams;\n}]);\n\napp.controller('AppCtrl', ['$scope', '$rootScope', '$state', function($scope, $rootScope, $state) {\n\t$rootScope.contentLoaded = true;\n\t$scope.currentAppString = $rootScope.startLocation;\n\t$rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams) {\n\t    if (toState.name === 'team' ){\n\t\t\t$state.go('team.roster');\n\t    }\n\t});\n\t$rootScope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {\n\t    $scope.currentAppString = toState.name.split(\".\")[0];\n\t});\n\t$rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams) {\n\t    $scope.currentAppString = toState.name.split(\".\")[0];\n\t});\n\t$rootScope.updateCurrentTeam = function(i) {\n\t\t$rootScope.currentTeam = $rootScope.teams[i];\n\t};\n}]);","var ls = angular.module('localStorage',[]);\n \nls.factory(\"$store\", ['$parse', function($parse) {\n\t/**\n\t * Global Vars\n\t */\n\tvar storage = (typeof window.localStorage === 'undefined') ? undefined : window.localStorage,\n\t\tsupported = !(typeof storage == 'undefined' || typeof window.JSON == 'undefined');\n\n\tvar privateMethods = {\n\t\t/**\n\t\t * Pass any type of a string from the localStorage to be parsed so it returns a usable version (like an Object)\n\t\t * @param res - a string that will be parsed for type\n\t\t * @returns {*} - whatever the real type of stored value was\n\t\t */\n\t\tparseValue: function(res) {\n\t\t\tvar val;\n\t\t\ttry {\n\t\t\t\tval = JSON.parse(res);\n\t\t\t\tif (typeof val == 'undefined'){\n\t\t\t\t\tval = res;\n\t\t\t\t}\n\t\t\t\tif (val == 'true'){\n\t\t\t\t\tval = true;\n\t\t\t\t}\n\t\t\t\tif (val == 'false'){\n\t\t\t\t\tval = false;\n\t\t\t\t}\n\t\t\t\tif (parseFloat(val) == val && !angular.isObject(val) ){\n\t\t\t\t\tval = parseFloat(val);\n\t\t\t\t}\n\t\t\t} catch(e){\n\t\t\t\tval = res;\n\t\t\t}\n\t\t\treturn val;\n\t\t}\n\t};\n\tvar publicMethods = {\n\t\t/**\n\t\t * Set - let's you set a new localStorage key pair set\n\t\t * @param key - a string that will be used as the accessor for the pair\n\t\t * @param value - the value of the localStorage item\n\t\t * @returns {*} - will return whatever it is you've stored in the local storage\n\t\t */\n\t\tset: function(key,value){\n\t\t\tif (!supported){\n\t\t\t\ttry {\n\t\t\t\t\t$.cookie(key, value);\n\t\t\t\t\treturn value;\n\t\t\t\t} catch(e){\n\t\t\t\t\tconsole.log('Local Storage not supported, make sure you have the $.cookie supported.');\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar saver = JSON.stringify(value);\n\t\t\tstorage.setItem(key, saver);\n\t\t\treturn privateMethods.parseValue(saver);\n\t\t},\n\t\t/**\n\t\t * Get - let's you get the value of any pair you've stored\n\t\t * @param key - the string that you set as accessor for the pair\n\t\t * @returns {*} - Object,String,Float,Boolean depending on what you stored\n\t\t */\n\t\tget: function(key){\n\t\t\tif (!supported){\n\t\t\t\ttry {\n\t\t\t\t\treturn privateMethods.parseValue($.cookie(key));\n\t\t\t\t} catch(e){\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar item = storage.getItem(key);\n\t\t\treturn privateMethods.parseValue(item);\n\t\t},\n\t\t/**\n\t\t * Remove - let's you nuke a value from localStorage\n\t\t * @param key - the accessor value\n\t\t * @returns {boolean} - if everything went as planned\n\t\t */\n\t\tremove: function(key) {\n\t\t\tif (!supported){\n\t\t\t\ttry {\n\t\t\t\t\t$.cookie(key, null);\n\t\t\t\t\treturn true;\n\t\t\t\t} catch(e){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tstorage.removeItem(key);\n\t\t\treturn true;\n\t\t},\n\t\t/**\n         * Bind - let's you directly bind a localStorage value to a $scope variable\n         * @param $scope - the current scope you want the variable available in\n         * @param key - the name of the variable you are binding\n         * @param def - the default value (OPTIONAL)\n         * @returns {*} - returns whatever the stored value is\n         */\n        bind: function ($scope, key, def) {\n            def = def || '';\n            if (!publicMethods.get(key)) {\n                publicMethods.set(key, def);\n            }\n            $parse(key).assign($scope, publicMethods.get(key));\n            $scope.$watch(key, function (val) {\n                publicMethods.set(key, val);\n            }, true);\n            return publicMethods.get(key);\n        }\n\t};\n\treturn publicMethods;\n}]);","app.controller('RosterCtrl', ['$scope', '$rootScope', '$http', '$store', function($scope, $rootScope, $http, $store) {\n\n    var positions = [\n        {\n            name: 'Quarterback',\n            abbr: 'QB',\n            on: false\n        },\n        {\n            name: 'Running Back',\n            abbr: 'RB',\n            on: false\n        },\n        {\n            name: 'Slotback',\n            abbr: 'SB',\n            on: false\n        },\n        {\n            name: 'Fullback',\n            abbr: 'FB',\n            on: false\n        },\n        {\n            name: 'Wide Receiver',\n            abbr: 'WR',\n            on: false\n        },\n        {\n            name: 'Tight End',\n            abbr: 'TE',\n            on: false\n        },\n        {\n            name: 'Tackle',\n            abbr: 'T',\n            on: false\n        },\n        {\n            name: 'Guard',\n            abbr: 'G',\n            on: false\n        },\n        {\n            name: 'Center',\n            abbr: 'C',\n            on: false\n        },\n        {\n            name: 'Long Snapper',\n            abbr: 'LS',\n            on: false\n        },\n        {\n            name: 'Defensive End',\n            abbr: 'DE',\n            on: false\n        },\n        {\n            name: 'Defensive Tackle',\n            abbr: 'DT',\n            on: false\n        },\n        {\n            name: 'Nose Guard',\n            abbr: 'NG',\n            on: false\n        },\n        {\n            name: 'Outside Linebacker',\n            abbr: 'OLB',\n            on: false\n        },\n        {\n            name: 'Middle Linebacker',\n            abbr: 'MLB',\n            on: false\n        },\n        {\n            name: 'Cornerback',\n            abbr: 'CB',\n            on: false\n        },\n        {\n            name: 'Free Safety',\n            abbr: 'FS',\n            on: false\n        },\n        {\n            name: 'Strong Safety',\n            abbr: 'SS',\n            on: false\n        },\n        {\n            name: 'Kicker',\n            abbr: 'K',\n            on: false\n        },\n        {\n            name: 'Punter',\n            abbr: 'P',\n            on: false\n        }\n    ];\n\n    var gradClasses = [\n        {\n            name: 'Frashman',\n            abbr: 'FR',\n            on: false\n        },\n        {\n            name: 'Sophomore',\n            abbr: 'SO',\n            on: false\n        },\n        {\n            name: 'Junior',\n            abbr: 'JR',\n            on: false\n        },\n        {\n            name: 'Senior',\n            abbr: 'SR',\n            on: false\n        },\n        {\n            name: 'Incoming',\n            abbr: 'IN',\n            on: false\n        },\n        {\n            name: 'Allumni',\n            abbr: 'AL',\n            on: false\n        }\n    ];\n\n\n    var teams = ['Redshirts', 'Starter', 'Junior Varsity', 'Varsity'];\n\n    var gradYears = [2014,2015,2016,2017,2018,2019];    \n\n    var seasons = [\n        {\n            year: 2015,\n            on: false\n        },\n        {\n            year: 2014,\n            on: false\n        },\n        {\n            year: 2013,\n            on: false\n        },\n        {\n            year: 2012,\n            on: false\n        },\n        {\n            year: 2011,\n            on: false\n        },\n        {\n            year: 2010,\n            on: false\n        }\n    ];\n\n    var feet = [ \n        {label: '4\\'', val: '4'},\n        {label: '5\\'', val: '5'},\n        {label: '6\\'', val: '6'},\n        {label: '7\\'', val: '7'}\n    ];\n    var inches = [ \n        {label: '0\"', val: '0'},\n        {label: '1\"', val: '1'},\n        {label: '2\"', val: '2'},\n        {label: '3\"', val: '3'},\n        {label: '4\"', val: '4'},\n        {label: '5\"', val: '5'},\n        {label: '6\"', val: '6'},\n        {label: '7\"', val: '7'},\n        {label: '8\"', val: '8'},\n        {label: '9\"', val: '9'},\n        {label: '10\"', val: '10'},\n        {label: '11\"', val: '11'},\n        {label: '12\"', val: '12'}\n    ];\n\n    var avatarUrls = [\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_2&image_path=/images/2014/3/17/huffman_connor_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/11/25/welsh_michael_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/6724312.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930067.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930076.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2013/8/6/warrick_jacorey_2013.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930070.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/8380156.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/21/heard_jerrod_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/8600283.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/11/25/greenwood_jimmy_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930677.jpeg',\n        'http://www.texassports.com/images/2013/6/25/7930073.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/22/vinklarek_logan_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/21/roberts_jr_jermaine_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/21/catalon_donald_2014_2.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_2&image_path=/images/2014/7/8/rose_nick_2014_web.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930075.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7478196.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930074.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/21/bonney_john_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2013/8/6/davis_antwuan_2013.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930060.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/8600279.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/21/bernard_roderick_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/6724309.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930078.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2015/4/17/yoder_tim_2015.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930072.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/21/hall_jason_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930063.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2013/8/6/huhn_erik_2013.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/8/20/foreman_d_onta_2014_polo_78.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/21/freeman_edwin_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930676.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/8380131.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2015/4/29/moore_evan_2015_96.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_2&image_path=/images/2013/10/25/becker_mitchell_2013.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/8613311.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/8380147.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930056.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/11/25/hafley_trenton_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2013/8/6/hughes_naashon_2013.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/8600281.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2015/4/29/harper_jay_2015.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7176250.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930055.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_2&image_path=/images/2014/3/17/beck_andrew_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/8380160.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/11/25/strickland_jordan_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2013/11/18/tseng_johnny_2013.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2015/3/20/jefferson_malik_2015_41.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/21/roberson_derick_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/11/25/sims_matthew_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7175892.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/11/25/mercado_alex_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/21/cuney_terrell_2014_2.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/11/25/holbrook_jak_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/8600282.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/11/25/graf_garrett_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2015/3/20/williams_connor_2015.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930087.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/8380162.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2015/4/29/ojeaga_patrick_2015_81.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2015/3/20/hodges_brandon_2015.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_2&image_path=/images/2014/3/17/anderson_alex_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/8600280.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/6724310.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2015/4/17/allsup_austin_2015.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7478187.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/22/rodriguez_elijah_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/6724303.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2015/3/20/nickelson_tristan_2015.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2013/8/6/perkins_kent_2013.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2015/3/20/thomas_garrett_2015.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2015/4/25/roberts_ryan_2015.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/11/25/wilson_michael_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_2&image_path=/images/2014/3/17/whiteley_blake_2014_68.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_2&image_path=/images/2013/10/25/center_matt_2013.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/21/foreman_armanti_2014_2.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/21/joe_lorenzo_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2015/4/29/moeller_philipp_2015.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/21/gray_garret_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2013/8/6/oliver_jake_2013_.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/21/leonard_dorian_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930064.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/8380169.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2015/3/20/vasser_quincy_2015.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930080.jpeg',\n        'http://www.texassports.com/images/2013/6/25/7930057.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/21/ford_poona_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/21/nelson_chris_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=headshot_1&image_path=/images/2014/7/21/mcmillon_jake_2014.jpg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/6724315.jpeg',\n        'http://www.texassports.com/common/controls/image_handler.aspx?thumb_prefix=player&image_path=/images/2013/6/25/7930082.jpeg'\n    ];\n\n    var streets = ['Park','Oak','Pine','Maple','Cedar','Elm','Washington','Lake','Hill','Lakeview','Meadowbrook','Lakeside','Briar','Kennedy'];\n    var streetPrefixes = ['St','Ln','Blvd','Pkwy','Ave','Ct'];\n    var noteList = ['Team player','Rookie','Quick on his feet','Excellant agility','Quick reflexes','Captain material','Needs to work on running the ball','Great long distance runner','','',''];\n    var firstNames = ['Bennett','Aiden','Sage','Liam','Michael','William','Mason','Jacob','Everett','River','Preston','Kelly','Carter','David','Eli','Carson','Alexander','Matthew','Noah','Gabriel','Jack','Jaxon','Ethan','Daniel','James','Jonathan','Cameron','Christopher','Logan','Jordan','Saint','Casey','August','Hunter','Dylan','Dominic','Benjamin','Nolan','Nicholas','Henry','Isaac','Lucas','Titan','Alexis','Emmett','Royal','Beckett','Buzz','Jayden','Brooks','Atticus','Gus','Silus','Miller','Zacharias','Lane','Kayden','Kai','Sebastian','Carey','Devon','Ryan','Joseph','Grayson','Madison','Jamie','Brantley','Duncan','Rory','Robin','Jayce','Xander','Dexter','Wyatt','Zayden','Connor','Tyler','Spenceer','Tatum','Austin','Angus','Ewan','Lennox','Zayn','Tristan','Atlas','Forrest','Finlay','Lachlan','Kellen','Nathan','Samuel','Caleb','Magnus','Joe','Dune','Owen','Andrew','Chandler','Kale'];\n    var lastNames = ['Smith','Johnson','Williams','Jones','Brown','Davis','Miller','Wilson','Moore','Taylor','Anderson','Thomas','Jackson','White','Harris','Martin','Thompson','Garcia','Martinez','Robinson','Clark','Rodriguez','Lewis','Lee','Walker','Hall','Allen','Young','Hernandez','King','Wright','Lopez','Hill','Scott','Green','Adams','Baker','Gonzalez','Nelson','Carter','Mitchell','Perez','Roberts','Turner','Phillips','Campbell','Parker','Evans','Edwards','Collins','Stewart','Sanchez','Morris','Rogers','Reed','Cook','Morgan','Bell','Murphy','Bailey','Rivera','Cooper','Richardson','Cox','Howard','Ward','Torres','Peterson','Gray','Ramirez','James','Watson','Brooks','Kelly','Sanders','Price','Bennett','Wood','Barnes','Ross','Henderson','Coleman','Jenkins','Perry','Powell','Long','Patterson','Hughes','Flores','Washington','Butler','Simmons','Foster','Gonzales','Bryant','Alexander','Russell','Griffin','Diaz','Hayes'];\n    var usedValues = {};\n    var roster = [];\n\n    randNum = function(min,max) {\n        return Math.round(Math.random() * (max - min) + min)\n    };\n\n    randUniqueNum = function(id,min,max) {\n        if(!usedValues[id] || usedValues[id].length === 0) {\n            usedValues[id] = [];\n            for(u = min; u <= max; u++) {\n                usedValues[id].push(u);\n            }     \n        }\n        var index = randNum(0,usedValues[id].length-1);\n        var val = usedValues[id][index]\n        usedValues[id].splice(index,1);\n        return val;\n    };\n\n    randArray = function(id,min,max,input,key) {\n        var output = [];\n        for(n = 0; n < (randNum(min,max)); n++) {\n            output.push(input[randUniqueNum(id,0,input.length-1)][key]);\n        }\n        usedValues[id] = [];\n        return output;\n    };\n\n    generatePlayers = function(teamSize) {\n        var id = 1000000\n        for (i = 0; i <= teamSize; i++) { \n            var num = randUniqueNum('num',1,teamSize),\n                gradYr = gradYears[randUniqueNum('gradYears',0,gradYears.length-1)],\n                first = firstNames[randUniqueNum('firstName',0,firstNames.length-1)],\n                last = lastNames[randUniqueNum('lastName',0,lastNames.length-1)],\n                pos = randArray('pos',1,2,positions,'abbr'),\n                seasns = randArray('seasns',1,4,seasons,'year'),\n                feet = randNum(5,6),\n                inches = randNum(0,12),\n                weight = randNum(150,300),\n                email = first.toLowerCase()+'.'+last.toLowerCase()+'@hudl.com',\n                mphone = '('+randNum(100,999)+') '+randNum(100,999)+'-'+randNum(1000,9999),\n                hphone = '('+randNum(100,999)+') '+randNum(100,999)+'-'+randNum(1000,9999),\n                line1 = randNum(1000,9999)+' '+streets[randNum(0,streets.length-1)]+' '+streetPrefixes[randNum(0,streetPrefixes.length-1)]+'.',\n                line2 = 'Apt. #'+randNum(100,999),\n                city = 'Austin',\n                state = 'TX',\n                zip = 78712,\n                avatarUrl = avatarUrls[randUniqueNum('avatarUrls',0,avatarUrls.length-1)],\n                notes = noteList[randNum(0,noteList.length-1)],\n                activity = [];\n            for (j = 0; j < randNum(25,50); j++) {\n                activity.push({date:randNum(1,12)+'/'+randNum(1,30)+'/'+randNum(10,15), time: randNum(10,200)});\n            }\n            roster.push({id:id,num:num,gradYr:gradYr,name:{first:first,last:last},positions:pos,seasons:seasns,height:{feet:feet,inches:inches},weight:weight,email:email,mphone:mphone,hphone:hphone,address:{line1:line1,line2:line2,city:city,state:state,zip:zip},avatarUrl:avatarUrl,notes:notes,activity:activity});\n            id++;\n        }\n    }\n\n    $scope.calculateClass = function(id) {\n        var currentYear = new Date().getFullYear();\n        var currentMonth = new Date().getMonth()+1;\n        var schoolYearOffset = 0;\n        var index;\n        if(currentMonth > 5) {\n            schoolYearOffset = 1;\n        }\n        for(i in $scope.roster) {\n            if(id === $scope.roster[i].id) {\n                index = i;\n            }\n        }\n        if($scope.roster[index].gradYr <= currentYear-schoolYearOffset) {\n            $scope.roster[index].cls = 'AL';\n        } else if($scope.roster[index].gradYr === currentYear+1-schoolYearOffset) {\n            $scope.roster[index].cls = 'SR';\n        } else if($scope.roster[index].gradYr === currentYear+2-schoolYearOffset) {\n            $scope.roster[index].cls = 'JR';\n        } else if($scope.roster[index].gradYr === currentYear+3-schoolYearOffset) {\n            $scope.roster[index].cls = 'SO';\n        } else if($scope.roster[index].gradYr === currentYear+4-schoolYearOffset) {\n            $scope.roster[index].cls = 'FR';\n        } else {\n            $scope.roster[index].cls = 'IN';\n        }\n    }\n\n    $scope.rosterOrder = function(predicate) {\n        $scope.reverse = (JSON.stringify($scope.predicate) === JSON.stringify(predicate)) ? !$scope.reverse : false;\n        $scope.predicate = predicate;\n    };\n\n    $scope.positionChange = function() {\n        if($scope.addingNewPlayer) {\n            $scope.removeNewPlayer();\n        }\n        for(i in $scope.positions){\n            if($scope.positions[i].on){\n                $scope.showAllPositions = false;\n                return;\n            }\n        }\n        $scope.showAllPositions = true;\n    };\n\n    $scope.positionsFilter = function(a) {\n        if($scope.showAllPositions) { return true; }\n        for(i in $scope.positions){\n            if(!a.positions) return;\n            var p = $scope.positions[i];\n            if(p.on && a.positions.indexOf(p.abbr) > -1){\n                return true;   \n            }               \n        }\n    };\n\n    $scope.gradClassChange = function() {\n        if($scope.addingNewPlayer) {\n            $scope.removeNewPlayer();\n        }\n        for(i in $scope.gradClasses){\n            if($scope.gradClasses[i].on){\n                $scope.showAllGradClasses = false;\n                return;\n            }\n        }\n        $scope.showAllGradClasses = true;\n    };\n\n    $scope.gradClassesFilter = function(a) {\n        if($scope.showAllGradClasses) { return true; }\n        for(i in $scope.gradClasses){\n            if(!a) return;\n            var g = $scope.gradClasses[i];\n            if(g.on && a.cls == g.abbr){\n                return true;   \n            }               \n        }\n    };\n\n    $scope.seasonsChange = function(i) {\n        if($scope.addingNewPlayer) {\n            $scope.removeNewPlayer();\n        }\n        for(index in $scope.seasons) {\n            $scope.seasons[index].on = false;\n        }\n        if(typeof i !== 'undefined') {\n            $scope.seasons[i].on = true;\n            $scope.showAllSeasons = false;\n        } else {\n            $scope.showAllSeasons = true;\n        }\n    };\n\n    $scope.seasonsFilter = function(a) {\n        if($scope.showAllSeasons) { return true; }\n        for(i in $scope.seasons){\n            if(!a.seasons) return;\n            var s = $scope.seasons[i];\n            if(s.on && a.seasons.indexOf(s.year) > -1){\n                return true;   \n            }               \n        }\n    };\n\n    $scope.editPlayer = function() {\n        $scope.editingPlayer = true;\n    };\n\n    $scope.cancelEditPlayer = function() {\n        $scope.editingPlayer = false;\n        $scope.selectPlayer($scope.activePlayer.id);\n        if($scope.addingNewPlayer) {\n            $scope.removeNewPlayer();\n        }\n    };\n\n    $scope.saveEditPlayer = function() {\n        $scope.editingPlayer = false;\n        $scope.addingNewPlayer = false;\n        var saveId = $scope.activePlayer.id;\n        for(i in $scope.roster) {\n            if(saveId === $scope.roster[i].id) {\n                delete $scope.activePlayer.positionString;\n                $scope.roster[i] = $scope.activePlayer;\n            }\n        }\n        $scope.calculateClass($scope.activePlayer.id);\n        $scope.selectPlayer($scope.activePlayer.id);\n    };\n\n    $scope.addNewPlayer = function() {\n        if(!$scope.addingNewPlayer) {\n            var rosterId = 0;\n            for(i in $scope.roster) {\n                if(rosterId < $scope.roster[i].id) {\n                    rosterId = $scope.roster[i].id;\n                }\n            }\n            rosterId++;\n            $scope.roster.push({});\n            $scope.roster[$scope.roster.length-1].id = rosterId;\n            $scope.selectPlayer(rosterId);\n            $scope.editingPlayer = true;\n            $scope.addingNewPlayer = true;\n            $scope.clearFilters();            \n        }\n    };\n\n    $scope.removeNewPlayer = function() {\n        $scope.roster.splice($scope.roster.length-1,1);\n        $scope.addingNewPlayer = false;\n        $scope.selectPlayerByIndex($scope.filteredRosterPlayerIndex-1);\n    };\n\n    $scope.deletePlayer = function(id) {\n        var playerIndexBeforeDeleted = 0;\n        id = (!id) ? $scope.activePlayer.id : id;\n        if($scope.roster.length > 0) {\n            for(i in $scope.roster) {\n                if(id === $scope.roster[i].id) {\n                    playerIndexBeforeDeleted = parseInt($scope.filteredRosterPlayerIndex);\n                    $scope.roster.splice(i,1);\n                }\n            }\n            $scope.addingNewPlayer = false;\n            $scope.editingPlayer = false;\n            $scope.$apply();\n            if(playerIndexBeforeDeleted < $scope.filteredRoster.length-1) {\n                $scope.selectPlayerByIndex(parseInt($scope.filteredRosterPlayerIndex));            \n            } else {\n                $scope.selectPlayerByIndex($scope.filteredRoster.length-1);\n            }\n        }\n    };\n\n    $scope.selectPlayer = function(id) {\n        $scope.editingPlayer = false;\n        for(i in $scope.filteredRoster) {\n            if($scope.filteredRoster[i].id === id ) {\n                $scope.filteredRosterPlayerIndex = i;\n            }\n        }\n        for(i in $scope.roster) {\n            if($scope.roster[i].id === id) {\n                $scope.rosterPlayerIndex = i;\n            }\n        }\n        var player = $scope.roster[$scope.rosterPlayerIndex];\n        player = angular.toJson(player,true);\n        player = JSON.parse(player);\n        $scope.activePlayer = player;\n        $scope.activePlayer.positionString = '';\n        var first = true;\n        for(i in $scope.activePlayer.positions) {\n            for(p in $scope.positions) {\n                if($scope.activePlayer.positions[i] === $scope.positions[p].abbr) {\n                    $scope.activePlayer.positionString += (!first) ? ' + ' : '';\n                    first = false;\n                    $scope.activePlayer.positionString += $scope.positions[p].name;\n                }\n            }\n        }\n        if($scope.addingNewPlayer) {\n            $scope.removeNewPlayer();\n        }\n        $('.roster-body-wrap').focus();\n    };\n\n    $scope.selectPlayerByIndex = function(index) {\n        $scope.selectPlayer($scope.filteredRoster[index].id);\n    };\n\n    $scope.selectPrevPlayer = function() {\n        if($scope.filteredRosterPlayerIndex>0) {\n            $scope.selectPlayerByIndex(parseInt($scope.filteredRosterPlayerIndex)-1);\n        }\n    }\n\n    $scope.selectNextPlayer = function() {\n        if($scope.filteredRosterPlayerIndex<$scope.filteredRoster.length-1) {\n            $scope.selectPlayerByIndex(parseInt($scope.filteredRosterPlayerIndex)+1);\n        }\n    }\n\n    $scope.scrollToSelection = function() {\n        var scrollWrap = $('.roster-body-wrap');\n        var itemHeight = 48;\n        var adjWindowScroll = scrollWrap.scrollTop()+scrollWrap.height()-itemHeight;\n        var adjSelectedScroll = $scope.filteredRosterPlayerIndex*48;\n        if(adjSelectedScroll > adjWindowScroll) {\n            scrollWrap.scrollTop(adjSelectedScroll-scrollWrap.height()+itemHeight-1);\n        } else if(scrollWrap.scrollTop() > $scope.filteredRosterPlayerIndex*48) {\n            scrollWrap.scrollTop($scope.filteredRosterPlayerIndex*48);\n        }    \n    }\n\n    $scope.keyPress = function(e) {\n        var key = {\n            tab: 9,\n            enter: 13,\n            esc: 27,\n            space: 32,\n            left: 37,\n            up: 38,\n            right: 39,\n            down: 40,\n            shift: 16,\n            ctrl: 17,\n            alt: 18,\n            backspace: 8,\n            del: 46,\n            command: 91\n        };\n        if(e.keyCode == key.up || e.keyCode == key.down || e.keyCode == key.del || e.keyCode == key.backspace) {\n            e.preventDefault();       \n        }\n        switch(e.keyCode) {\n            case key.up: $scope.selectPrevPlayer(); $scope.scrollToSelection();\n            break;\n            case key.down: $scope.selectNextPlayer(); $scope.scrollToSelection();\n            break;\n            case key.del: $scope.deletePlayer($scope.activePlayer.id);\n            break;\n            case key.backspace: $scope.deletePlayer($scope.activePlayer.id);\n            break;\n        }\n    }\n\n    $scope.refreshData = function() {\n        $scope.roster = [];\n        roster = [];\n        generatePlayers(100);\n        $scope.roster = roster;\n        for(i in $scope.roster) {\n            $scope.calculateClass($scope.roster[i].id);\n        } \n    }\n\n    $scope.printRoster = function() {\n        window.print();\n    }\n\n    $scope.clearRosterSearch = function(event) {\n        $scope.rosterSearch = '';\n        if($('#roster-search').is(\":focus\")) {\n            $('#roster-search').focus();\n        }\n    }\n\n    $scope.rosterSearchMouseDown = function(event) {\n        event.preventDefault();\n    }\n\n    $scope.clearFilters = function() {\n        for(i in $scope.positions) {\n            $scope.positions[i].on = false;\n        }\n        for(i in $scope.gradClasses) {\n            $scope.gradClasses[i].on = false;\n        }\n        for(i in $scope.seasons) {\n            $scope.seasons[i].on = false;\n        }\n        $scope.showAllPositions = true;\n        $scope.showAllGradClasses = true;\n        $scope.showAllSeasons = true;\n    }\n\n    $scope.init = function() {\n        $store.bind($scope, 'roster', roster);\n        if(typeof $scope.roster !== 'undefined' && $scope.roster.length > 0) {\n            for(i in $scope.roster) {\n                if(typeof $scope.roster[i].name === 'undefined' && typeof $scope.roster[i].num === 'undefined') {\n                    $scope.roster.splice(i,1);\n                }\n            }\n        } else {\n            generatePlayers(100);\n            $scope.roster = roster;  \n        }\n        for(i in $scope.roster) {\n            $scope.calculateClass($scope.roster[i].id);\n        } \n        $scope.positions = positions;\n        $scope.gradClasses = gradClasses;\n        $scope.seasons = seasons;\n        $rootScope.teams = teams;\n        $scope.gradYears = gradYears;\n        $scope.feet = feet;\n        $scope.inches = inches;\n        $scope.showAllPositions = true;\n        $scope.showAllGradClasses = true;\n        $scope.showAllSeasons = true;\n        $scope.isArray = angular.isArray;\n        $scope.predicate = 'num';\n        $scope.reverse = false;\n        $rootScope.currentTeam = $rootScope.teams[3];\n        var listener = $scope.$watch(\"filteredRoster\", function () {\n            if(typeof $scope.filteredRoster !== 'undefined' && $scope.filteredRoster.length > 0) {\n                listener();\n                $scope.selectPlayerByIndex(0);\n            };\n        });\n        var refreshed = false;\n        $store.bind($scope, 'refreshed', refreshed);\n        if(!$scope.refreshed) {\n            $scope.refreshData();\n            $scope.refreshed = true;\n        }\n    }\n    $scope.init();\n\n}]);"],"sourceRoot":"/source/"}